// Code generated by MockGen. DO NOT EDIT.
// Source: internal/db/analytics_db/analytics_db.go

// Package mock_db is a generated GoMock package.
package mock_db

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDatabaseAnalyticsInterface is a mock of DatabaseAnalyticsInterface interface.
type MockDatabaseAnalyticsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseAnalyticsInterfaceMockRecorder
}

// MockDatabaseAnalyticsInterfaceMockRecorder is the mock recorder for MockDatabaseAnalyticsInterface.
type MockDatabaseAnalyticsInterfaceMockRecorder struct {
	mock *MockDatabaseAnalyticsInterface
}

// NewMockDatabaseAnalyticsInterface creates a new mock instance.
func NewMockDatabaseAnalyticsInterface(ctrl *gomock.Controller) *MockDatabaseAnalyticsInterface {
	mock := &MockDatabaseAnalyticsInterface{ctrl: ctrl}
	mock.recorder = &MockDatabaseAnalyticsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseAnalyticsInterface) EXPECT() *MockDatabaseAnalyticsInterfaceMockRecorder {
	return m.recorder
}

// CloseAnalyticsDB mocks base method.
func (m *MockDatabaseAnalyticsInterface) CloseAnalyticsDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseAnalyticsDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseAnalyticsDB indicates an expected call of CloseAnalyticsDB.
func (mr *MockDatabaseAnalyticsInterfaceMockRecorder) CloseAnalyticsDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseAnalyticsDB", reflect.TypeOf((*MockDatabaseAnalyticsInterface)(nil).CloseAnalyticsDB))
}

// MigrateAnalyticsModels mocks base method.
func (m *MockDatabaseAnalyticsInterface) MigrateAnalyticsModels() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MigrateAnalyticsModels")
	ret0, _ := ret[0].(error)
	return ret0
}

// MigrateAnalyticsModels indicates an expected call of MigrateAnalyticsModels.
func (mr *MockDatabaseAnalyticsInterfaceMockRecorder) MigrateAnalyticsModels() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MigrateAnalyticsModels", reflect.TypeOf((*MockDatabaseAnalyticsInterface)(nil).MigrateAnalyticsModels))
}
